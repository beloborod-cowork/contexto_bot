from database import reset_parameter,create_promo_db,fetch_data
from logs import logger_promo
create_promo_db()

def process_promo(promo: str,id: int) -> str:
    try:
        exists = fetch_data("promos","*",condition=f"WHERE name = '{promo}'")[0] if not list() else fetch_data("promos","*",condition=f"WHERE name = '{promo}'")
        if exists == list():
            logger_promo.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id} –≤–≤–µ–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promo}, –æ–¥–Ω–∞–∫–æ –µ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            return "<b>–¢–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>"
        user_id_raw = exists[3]
        if user_id_raw != None:
            user_ids_activated = [int(i) for i in user_id_raw.split(",")[:-1]]
        else: user_ids_activated = None
        if user_ids_activated != None:
            if id in user_ids_activated:
                logger_promo.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id} –≤–≤–µ–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promo}, –æ–¥–Ω–∞–∫–æ –æ–Ω —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
                return "<b>–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥.</b>"
        activations = exists[1]
        if activations == 0:
            logger_promo.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id} –≤–≤–µ–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promo}, –æ–¥–Ω–∞–∫–æ —É —ç—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.")
            return "<b>–£ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.</b>"

        hints = exists[2]
        if user_id_raw !=None:
            user_id_raw += f"{id},"
        else:
            user_id_raw = f"{id},"

        reset_parameter("users","hints",f"hints + {hints}",condition=f"WHERE telegram_id = {id}")
        reset_parameter("promos","activations","activations - 1",condition=f"WHERE name = '{promo}'")
        reset_parameter("promos","users_activated",f"'{user_id_raw}'",condition=f"WHERE name = '{promo}'")
        logger_promo.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {id} –≤–≤–µ–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promo}. –ï–º—É –Ω–∞—á–∏—Å–ª–µ–Ω–æ {hints} –ø–æ–¥—Å–∫–∞–∑–æ–∫")
        return f"<b>–í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥.\n–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {hints}üí°–ü–æ–¥—Å–∫–∞–∑–æ–∫.</b>"
    except Exception as e:
        logger_promo.error(f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ {promo} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {id}. –û—à–∏–±–∫–∞: {e}")
        return "–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
